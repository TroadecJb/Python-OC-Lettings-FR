# CircleCI configuration file
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_TAG: troadecjb/jbt-oc-lettings:latest
    docker:
      - image: cimg/python:3.11.5

jobs:
  # Job one with a unique name
  build:
    executor: docker-publisher
    # docker:
    #   - image: cimg/python:3.11.5

    steps:
      - checkout
      # - run: python --version
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build --tag "${IMAGE_TAG}" .

      - run:
          name: Archive Docker image
          command: docker save --output image.tar "${IMAGE_TAG}"
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  push:
    executor: docker-publisher

    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker image
          command: docker load --input /tmp/workspace/image.tar

      - run:
          name: Publish Docker image
          command: |
            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            docker push "${IMAGE_TAG}"

  test:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - run:
          name: Test preparation
          command: |
            pip install -r requirements.txt
      - run:
          name: run tests
          command: |
            mkdir test-results
            pytest --junitxml=test-results/junit.xml
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: terst-results
  
  coverage:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - run:
          name: coverage preparation
          command: |
            pip install -r requirements.txt
      - run:
          name: run coverage
          command: |
            coverage run -m pytest
            coverage report
            coverage html
      - store_artifacts:
          path: htmlcov

  linting:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - run:
          name: linting
          command: |
            pip install -r requirements.txt
            flake8

  deploy:
    docker:
      - image: cimg/python:3.11.5
    steps:
      - checkout
      - run:
          name: Deploy main to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master



workflows:
# Name of workflow
  build_and_tests:
    # List of jobs that will run
    jobs:
      - build
      - test
      - coverage
      - linting
      - push:
          requires:
            - build
            - test
            - coverage
            filters:
              branches:
                only: master
      - deploy:
          requires:
            - build
            - test
            - coverage
          filters:
            branches:
              only: master
